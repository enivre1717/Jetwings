"use strict";var getUrl=window.location,baseUrl=getUrl.protocol+"//"+getUrl.host+"/"+getUrl.pathname.split("/")[1],viewUrl=baseUrl+"public",apiUrl=baseUrl+"public",app=angular.module("myApp",["ngRoute","ui.bootstrap","ngCookies","tour_guide","fit_bookings","forms","safety_contracts","own_expenses","arrival_form","commission_form","claims","in_store","feedback"]),tour_guide=angular.module("tour_guide",["ngRoute"]),fit_bookings=angular.module("fit_bookings",["ngRoute"]),forms=angular.module("forms",["ngRoute"]),safety_contracts=angular.module("safety_contracts",["ngRoute"]),own_expenses=angular.module("own_expenses",["ngRoute"]),arrival_form=angular.module("arrival_form",["ngRoute"]),commission_form=angular.module("commission_form",["ngRoute"]),claims=angular.module("claims",["ngRoute"]),in_store=angular.module("in_store",["ngRoute"]),feedback=angular.module("feedback",["ngRoute"]);app.config(function($routeProvider,$locationProvider){$routeProvider.when("/",{controller:"LoginController",templateUrl:viewUrl+"/login"}).when("/fitbookings/list",{controller:"FitBookingsController",templateUrl:viewUrl+"/fitbookings/list"}).when("/fitbookings/forms/:fitBookingId",{controller:"FormsController",templateUrl:viewUrl+"/fitbookings/forms"}).when("/fitbookings/details/:fitBookingId",{controller:"FitBookingsDetailsController",templateUrl:viewUrl+"/fitbookings/details"}).when("/fitbookings/welcome/:fitBookingId",{controller:"WelcomeController",templateUrl:viewUrl+"/fitbookings/welcome"}).when("/safety-contracts/index/:fitBookingId",{controller:"SafetyContractController",templateUrl:viewUrl+"/safety-contracts/index"}).when("/own-expenses/index/:fitBookingId",{controller:"OwnExpensesController",templateUrl:viewUrl+"/own-expenses/index"}).when("/arrival/index/:fitBookingId",{controller:"ArrivalFormController",templateUrl:viewUrl+"/arrival/index"}).when("/commissions/index/:fitBookingId",{controller:"CommissionFormController",templateUrl:viewUrl+"/commissions/index"}).when("/claims/index/:fitBookingId",{controller:"ClaimsController",templateUrl:viewUrl+"/claims/index"}).when("/in-store/index/:fitBookingId",{controller:"InStoreController",templateUrl:viewUrl+"/in-store/index"}).when("/feedback/index/:fitBookingId",{controller:"FeedbackController",templateUrl:viewUrl+"/feedback/index"}).when("/logout",{controller:"LogoutController",templateUrl:viewUrl+"/login"}).otherwise({templateUrl:viewUrl+"/errors/404"})}),app.run(["$http","$cookies","$rootScope","$location",function($http,$cookies,$rootScope,$location){$http.defaults.headers.common.Authorization=$cookies.get("apiToken"),$http.defaults.headers.common["X-CSRF-TOKEN"]=$('meta[name="csrf-token"]').attr("content"),$rootScope.monthList=function(){for(var aryMonth=[],strMonth="",i=1;i<=12;i++)strMonth=("0"+i).slice(-2),aryMonth.push({value:strMonth,text:strMonth});return aryMonth},$rootScope.todayDate=moment().format("DD/MM/YYYY"),$rootScope.curYear=moment().format("YYYY"),$rootScope.curMonth=moment().format("MM"),$rootScope.curDay=moment().format("DD"),$rootScope.$on("$routeChangeStart",function(evt,to,from){void 0!==$cookies.get("apiToken")&&"/"==to.$$route.originalPath&&($rootScope.isLoggedIn=!0,$location.path("/fitbookings/list")),void 0!==$cookies.get("apiToken")&&""!=$cookies.get("apiToken")?$rootScope.isLoggedIn=!0:$rootScope.isLoggedIn=!1}),$rootScope.$on("$routeChangeError",function(evt,to,from,error){401==error.status&&($location.path("/"),$cookies.remove("apiToken"))}),$rootScope.showNotification=function(msg,type){$rootScope.msg=msg,$rootScope.class="error"==type?"danger":"success"}}]),app.filter("formatDate",function(){return function(text,format){return moment(text).format(format)}}).filter("html",function($sce){return function(text){return $sce.trustAsHtml(text)}});
"use strict";tour_guide.controller("LoginController",["$scope","$rootScope","$route","$http","$uibModal","$window","tourguideModel","$cookies","$location",function($scope,$rootScope,$route,$http,$uibModal,$window,tourguideModel,$cookies,$location){$scope.dataLoaded=!0,$scope.login=function(user){tourguideModel.login(user).then(function(results){$scope.dataLoaded=!1,200==results.status?($scope.dataLoaded=!0,void 0!==results.data.errors&&Object.keys(results.data.errors).length>0?$scope.errors=results.data.errors:($cookies.put("apiToken","Bearer "+results.data.apiToken),$http.defaults.headers.common.Authorization="Bearer "+results.data.apiToken,$location.path("/fitbookings/list"))):console.log("Error occurred - unable to login to the app.")}).catch(function(error){console.log(error),console.log("Error occurred in angular.")})},$scope.close=function(){$scope.$modalInstance.close()}}]);
tour_guide.controller("LogoutController",["$scope","$route","$http","$uibModal","$window","tourguideModel","$location","$cookies",function($scope,$route,$http,$uibModal,$window,tourguideModel,$location,$cookies){tourguideModel.logout().then(function(results){200==results.status?1==results.data&&($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred - unable to logout of the app.")}).catch(function(error){console.log(error),console.log("Error occurred in angular.")})}]);
fit_bookings.controller("FitBookingsController",["$scope","$route","$http","$uibModal","$window","fitbookingsModel","$location","$cookies",function($scope,$route,$http,$uibModal,$window,fitbookingsModel,$location,$cookies){$scope.isDateFromFilterOpened=!1,$scope.isDateToFilterOpened=!1;var date=new Date,startMonth=new Date(date.getFullYear(),date.getMonth(),1),endMonth=new Date(date.getFullYear(),date.getMonth()+1,0);$scope.openDateFromFilter=function(){0==$scope.isDateFromFilterOpened?$scope.isDateFromFilterOpened=!0:$scope.isDateFromFilterOpened=!1},$scope.openDateToFilter=function(){0==$scope.isDateToFilterOpened?$scope.isDateToFilterOpened=!0:$scope.isDateToFilterOpened=!1},$scope.filter={},$scope.filter.dateFrom=startMonth,$scope.filter.dateTo=endMonth,fitbookingsModel.getBookings($scope.filter).then(function(results){$scope.fitbookings=results.data}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred retrieving bookings.")}),$scope.filterBookings=function(filter){fitbookingsModel.getBookings(filter).then(function(results){$scope.fitbookings=results.data}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred retrieving bookings.")})},$scope.fitbookingDetails=function(fitBookingId){$location.path("/fitbookings/forms/"+fitBookingId)}}]).controller("FitBookingsDetailsController",["$scope","$route","$http","$uibModal","$window","fitbookingsModel","$location","$cookies",function($scope,$route,$http,$uibModal,$window,fitbookingsModel,$location,$cookies){var fitBookingId=$route.current.params.fitBookingId;fitbookingsModel.getBookingDetails(fitBookingId).then(function(results){$scope.fitbookings=results.data[0],$scope.hotels=[],angular.forEach($scope.fitbookings.calls,function(v,k){$scope.hotels.push(v.hotels)})}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred retrieving bookings details.")})}]).controller("WelcomeController",["$scope","$route","$http","$uibModal","$window","fitbookingsModel","$location","$cookies",function($scope,$route,$http,$uibModal,$window,fitbookingsModel,$location,$cookies){$scope.fitBookingId=$route.current.params.fitBookingId,fitbookingsModel.getWelcomeSign($scope.fitBookingId).then(function(results){$scope.welcomeSign=results.data}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred retrieving welcome sign.")})}]);
forms.controller("FormsController",["$scope","$route","$location","$http","$uibModal","$window","fitbookingsModel","$cookies",function($scope,$route,$location,$http,$uibModal,$window,fitbookingsModel,$cookies){var fitBookingId=$route.current.params.fitBookingId;$scope.dataLoaded=!1,fitbookingsModel.getBookingDetails(fitBookingId).then(function(results){$scope.dataLoaded=!0,results.data?$scope.bookingDetails=results.data[0]:console.log("Booking details is empty.")}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred in retrieving bookings.")}),fitbookingsModel.check2ndCall(fitBookingId).then(function(results){results.data?$scope.has2ndCall=results.data:console.log("Error occurred in retrieving 2nd call.")}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred in retrieving 2nd call.")})}]);
safety_contracts.controller("SafetyContractController",["$scope","$rootScope","$route","$location","$http","$uibModal","$window","fitbookingsModel","saleAgenciesModel","safetyContractsModel",function($scope,$rootScope,$route,$location,$http,$uibModal,$window,fitbookingsModel,saleAgenciesModel,safetyContractsModel){var fitBookingId=$route.current.params.fitBookingId;$scope.contract={},$scope.monthList=$rootScope.monthList(),$scope.contract.fromDateMonth=$rootScope.curMonth,$scope.contract.toDateMonth=$rootScope.curMonth,$scope.contract.joinDateMonth=$rootScope.curMonth,$scope.contract.fromDateYr=$rootScope.curYear,$scope.contract.toDateYr=$rootScope.curYear,$scope.contract.joinDateYr=$rootScope.curYear,$scope.contract.fromDateDay=$rootScope.curDay,$scope.contract.fitBookingId=fitBookingId,fitbookingsModel.getBookingDetails(fitBookingId).then(function(results){results.data?($scope.bookingDetails=results.data[0],saleAgenciesModel.getSalesAgencyById($scope.bookingDetails.sale_agency_id).then(function(results){$scope.companyName=results.data.name}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving bookings.")})):console.log("Booking details is empty.")}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving bookings.")}),$scope.submitContract=function(contract){contract.signature='{"lines":[]}'!=$("#contract_signature").val()?$("#contract_signature").val():"",safetyContractsModel.submitForm(contract).then(function(results){void 0!==results.data.errors&&Object.keys(results.data.errors).length>0?$scope.errors=results.data.errors:("true"==results.data?$rootScope.showNotification("离团安全责任书已成功提交。","success"):$rootScope.showNotification("离团安全责任书未提交。","error"),$location.path("/fitbookings/forms/"+contract.fitBookingId))}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in submitting form.")})},$("#Signature").signature({syncField:$("#Signature").next("input")}),$(".clearButton a").click(function(e){e.preventDefault(),$(this).parents(".sigWrapper").find(".sigPad").signature("clear"),$(this).parents(".sigWrapper").find(".sigPad").next("input").val("")})}]);
own_expenses.controller("OwnExpensesController",["$scope","$rootScope","$route","$location","$http","$uibModal","$window","ownExpensesModel",function($scope,$rootScope,$route,$location,$http,$uibModal,$window,ownExpensesModel){var fitBookingId=$route.current.params.fitBookingId;$scope.ownExpenses={},$scope.ownExpenses.fitBookingId=fitBookingId,$scope.ownExpenses.attractions=[],$scope.ownExpenses.attractions.push({attraction:""}),$scope.ownExpenses.names=[],$scope.ownExpenses.names.push({name:""}),$scope.addAttraction=function(){$scope.ownExpenses.attractions.push({attraction:""})},$scope.addName=function(){$scope.ownExpenses.names.push({name:""})},$scope.submitForm=function(ownExpenses){ownExpenses.signature='{"lines":[]}'!=$("#signature").val()?$("#signature").val():"",ownExpenses.tourLeaderSignature='{"lines":[]}'!=$("#tour_leader_signature").val()?$("#tour_leader_signature").val():"",ownExpensesModel.submitForm(ownExpenses).then(function(results){void 0!==results.data.errors&&Object.keys(results.data.errors).length>0?$scope.errors=results.data.errors:("true"==results.data?$rootScope.showNotification("自费旅游项目协议书已成功提交。","success"):$rootScope.showNotification("自费旅游项目协议书未提交。","error"),$location.path("/fitbookings/forms/"+ownExpenses.fitBookingId))}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in saving own expenses form.")})},$("#Signature").signature({syncField:$("#Signature").next("input")}),$("#TourLeaderSignature").signature({syncField:$("#TourLeaderSignature").next("input")}),$(".clearButton a").click(function(e){e.preventDefault(),$(this).parents(".sigWrapper").find(".sigPad").signature("clear"),$(this).parents(".sigWrapper").find(".sigPad").next("input").val("")})}]);
in_store.controller("InStoreController",["$scope","$rootScope","$route","$http","$uibModal","$window","inStoreModel","$location",function($scope,$rootScope,$route,$http,$uibModal,$window,inStoreModel,$location){var fitBookingId=$route.current.params.fitBookingId;console.log("In Store Controller JS",fitBookingId),$scope.inStore={},$scope.inStore.fitBookingId=fitBookingId,$scope.inStore.representative,$scope.inStore.addRemoveAttraction,$scope.inStore.signature=$("#InStoreForms_signature").val(),$scope.inStore.tourLeaderSignature=$("#InStoreForms_tour_leader_signature").val(),$scope.inStore.attractions=[],$scope.inStore.attractions.push({attraction:""}),$scope.inStore.names=[],$scope.inStore.names.push({name:""}),$scope.addAttraction=function(){$scope.inStore.attractions.push({attraction:""})},$scope.addName=function(){$scope.inStore.names.push({name:""})},$("#Signature").signature({syncField:$("#Signature").next("input")}),$("#TourLeaderSignature").signature({syncField:$("#TourLeaderSignature").next("input")}),$(".clearButton a").click(function(e){e.preventDefault(),$(this).parents(".sigWrapper").find(".sigPad").signature("clear"),$(this).parents(".sigWrapper").find(".sigPad").next("input").val("")}),$scope.submitForm=function(inStore){$scope.inStore.signature=$("#InStoreForms_signature").val(),$scope.inStore.tourLeaderSignature=$("#InStoreForms_tour_leader_signature").val(),inStoreModel.submitForm(inStore).then(function(results){void 0!==results.data.errors&&Object.keys(results.data.errors).length>0?$scope.errors=results.data.errors:("true"==results.data?$rootScope.showNotification("自费旅游项目协议书已成功提交。","success"):$rootScope.showNotification("自费旅游项目协议书未提交。","error"),$location.path("/fitbookings/forms/"+$scope.inStore.fitBookingId))}).catch(function(error){console.log(error),401==error.status?$location.path("/"):console.log("Error occurred in saving in-store form.")})}}]);
feedback.controller("FeedbackController",["$scope","$rootScope","$route","$http","$uibModal","$window","feedbackModel","$location",function($scope,$rootScope,$route,$http,$uibModal,$window,feedbackModel,$location){var fitBookingId=$route.current.params.fitBookingId;$scope.feedback={},$scope.feedback.fitBookingId=fitBookingId,$scope.feedback.representative,$scope.ratings=[{value:"很好",en_value:"good"},{value:"好",en_value:"normal"},{value:"普通",en_value:"bad"},{value:"差",en_value:"worst"},{value:"不适用",en_value:"na"}],feedbackModel.getBookingDetails(fitBookingId).then(function(results){$scope.fitBookings=results.data[0],feedbackModel.getSalesAgencyById($scope.fitBookings.sale_agency_id).then(function(results){$scope.saleAgencies=results.data}).catch(function(error){$scope.saleAgencies=null})}).catch(function(error){return console.log("Error occurred in retrieving bookings."),null}),feedbackModel.getRestaurants().then(function(results){$scope.restaurantlist=results.data,$scope.restaurantlist.push({id:0,name:"其他"})}).catch(function(error){return console.log("Error occurred in retrieving restaurants."),null}),$scope.feedbackTourguideOptions=feedbackModel.getTourguideStaticFormOpts(),$scope.feedbackCoachOptions=feedbackModel.getCoachStaticFormOpts(),$scope.feedbackHotelOptions=feedbackModel.getHotelStaticFormOpts(),$scope.feedback.restaurants=[],$scope.feedback.restaurants.push({restaurant_id:"",other_restaurant:"",rating:"",class:"fb-restaurant"}),$scope.feedback.names=[],$scope.feedback.names.push({name:""}),$scope.addRestaurantFeedback=function(){$scope.feedback.restaurants.push({restaurant_id:"",other_restaurant:"",rating:"",class:"fb-restaurant"}),console.log($scope.feedback.restaurants)},$scope.addName=function(){$scope.feedback.names.push({name:""})},$("#Signature").signature({syncField:$("#Signature").next("input")}),$("#TourLeaderSignature").signature({syncField:$("#TourLeaderSignature").next("input")}),$(".clearButton a").click(function(e){e.preventDefault(),$(this).parents(".sigWrapper").find(".sigPad").signature("clear"),$(this).parents(".sigWrapper").find(".sigPad").next("input").val("")}),$scope.handleRadioClick=function(group,opt){switch(group){case"tourguide":angular.forEach($scope.feedbackTourguideOptions,function(item){console.log(group,"."+item.class+"-"+opt.en_value),$("."+item.class+"-"+opt.en_value).prop("checked",!0),$("."+item.class+"-"+opt.en_value).attr("checked",!0)});break;case"coach":angular.forEach($scope.feedbackCoachOptions,function(item){console.log(group,"."+item.class+"-"+opt.en_value),$("."+item.class+"-"+opt.en_value).prop("checked",!0),$("."+item.class+"-"+opt.en_value).attr("checked",!0)});break;case"hotel":angular.forEach($scope.feedbackHotelOptions,function(item){console.log(group,"."+item.class+"-"+opt.en_value),$("."+item.class+"-"+opt.en_value).prop("checked",!0),$("."+item.class+"-"+opt.en_value).attr("checked",!0)});break;case"restaurant":angular.forEach($scope.feedback.restaurants,function(item){console.log(group,"."+item.class+"-"+opt.en_value),$("."+item.class+"-"+opt.en_value).prop("checked",!0),$("."+item.class+"-"+opt.en_value).attr("checked",!0)})}},$scope.submitForm=function(feedback){$scope.feedback.signature=$("#feedback_signature").val(),$scope.feedback.tourLeaderSignature=$("#feedback_tour_leader_signature").val(),$scope.feedback.tour_guide_services=$("input[type=radio][name='tour_guide_services']:checked").val(),$scope.feedback.tour_guide_attire=$("input[type=radio][name='tour_guide_attire']:checked").val(),$scope.feedback.tour_guide_attraction=$("input[type=radio][name='tour_guide_attraction']:checked").val(),$scope.feedback.tour_guide_optional=$("input[type=radio][name='tour_guide_optional']:checked").val(),$scope.feedback.tour_guide_shopping=$("input[type=radio][name='tour_guide_shopping']:checked").val(),$scope.feedback.tour_guide_coach=$("input[type=radio][name='tour_guide_coach']:checked").val(),$scope.feedback.coach_technique=$("input[type=radio][name='coach_technique']:checked").val(),$scope.feedback.coach_attitude=$("input[type=radio][name='coach_attitude']:checked").val(),$scope.feedback.coach_aircon=$("input[type=radio][name='coach_aircon']:checked").val(),$scope.feedback.coach_cleaniness=$("input[type=radio][name='coach_cleaniness']:checked").val(),$scope.feedback.hotel=$("input[type=radio][name='hotel']:checked").val(),feedbackModel.submitForm(feedback).then(function(results){void 0!==results.data.errors&&Object.keys(results.data.errors).length>0?$scope.errors=results.data.errors:("true"==results.data?$rootScope.showNotification("自费旅游项目协议书已成功提交。","success"):$rootScope.showNotification("自费旅游项目协议书未提交。","error"),$location.path("/fitbookings/forms/"+$scope.feedback.fitBookingId))}).catch(function(error){console.log(error),401==error.status?$location.path("/"):console.log("Error occurred in saving feedback form.")})},$scope.isNumber=function(number){return""!=number}}]);
arrival_form.controller("ArrivalFormController",["$scope","$rootScope","$route","$location","$http","$uibModal","arrivalFormModel","fitFlightsModel",function($scope,$rootScope,$route,$location,$http,$uibModal,arrivalFormModel,fitFlightsModel){var fitBookingId=$route.current.params.fitBookingId;arrivalFormModel.getArrivalFormDetails(fitBookingId).then(function(results){results.data.length>0?($scope.arrivalForms=results.data[0],$scope.hasSubmitted=!0):($scope.arrivalForms={},$scope.hasSubmitted=!1,fitFlightsModel.getArrivalDetails(fitBookingId,2).then(function(results){results.data?($scope.arrivalForms.fit_booking_id=results.data[0].id,$scope.arrivalForms.tour_code=results.data[0].tour_code,angular.forEach(results.data[0].calls,function(value,key){angular.forEach(value.flights,function(v,k){"Arrival"==v.type?($scope.arrivalForms.two_nd_arrival=v.flight_no,$scope.arrivalForms.departure_date=v.arrival_at,$scope.arrivalForms.arrival_time=""!=v.arrival_at_1?v.arrival_at_1:v.arrival_at):"Departure"==v.type&&($scope.arrivalForms.departure_flight=v.flight_no,$scope.arrivalForms.departure_time=""!=v.departure_at_1?v.departure_at_1:v.departure_at)})})):console.log("Invalid booking.")}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving booking details.")}))}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving arrival details.")}),$scope.submitForm=function(arrivalForms){arrivalForms.tourGuideSignature='{"lines":[]}'!=$("#tour_guide_signature").val()?$("#tour_guide_signature").val():"",arrivalForms.tourLeaderSignature='{"lines":[]}'!=$("#tour_leader_signature").val()?$("#tour_leader_signature").val():"",arrivalFormModel.submitForms(arrivalForms).then(function(results){void 0!==results.data.errors&&Object.keys(results.data.errors).length>0?$scope.errors=results.data.errors:("true"==results.data?$rootScope.showNotification("二次交接与离新确认书已成功提交。","success"):$rootScope.showNotification("二次交接与离新确认书未提交。","error"),$location.path("/fitbookings/forms/"+arrivalForms.fit_booking_id))}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in submitting arrival form.")})},$("#TourGuideSignature").signature({syncField:$("#TourGuideSignature").next("input")}),$("#TourLeaderSignature").signature({syncField:$("#TourLeaderSignature").next("input")}),$(".clearButton a").click(function(e){e.preventDefault(),$(this).parents(".sigWrapper").find(".sigPad").signature("clear"),$(this).parents(".sigWrapper").find(".sigPad").next("input").val("")})}]);
commission_form.controller("CommissionFormController",["$scope","$rootScope","$route","$location","$http","$uibModal","commissionFormModel","fitbookingsModel","tourguideModel",function($scope,$rootScope,$route,$location,$http,$uibModal,commissionFormModel,fitbookingsModel,tourguideModel){var fitBookingId=$route.current.params.fitBookingId;function calculateTotalSGD(commissions){var total=0,qty=1;return total+=parseFloat(null!=commissions.jewellery_sgd?commissions.jewellery_sgd:0),total+=parseFloat(null!=commissions.yong_ann_sgd?commissions.yong_ann_sgd:0),angular.forEach(commissions.commission_items,function(v,k){""!=v.qty&&null!=v.qty&&(qty=v.qty),total+=parseInt(qty)*parseFloat(null!=v.sgd?v.sgd:0)}),total.toFixed(2)}function calculateTotalRMB(commissions){var total=0,qty=1;return total+=parseFloat(null!=commissions.jewellery_rmb?commissions.jewellery_rmb:0),total+=parseFloat(null!=commissions.yong_ann_rmb?commissions.yong_ann_rmb:0),angular.forEach(commissions.commission_items,function(v,k){""!=v.qty&&null!=v.qty&&(qty=v.qty),total+=parseInt(qty)*parseFloat(null!=v.rmb?v.rmb:0)}),total.toFixed(2)}commissionFormModel.getCommissionClaimsDetails(fitBookingId).then(function(results){results.data.length>0?($scope.commissions=results.data[0],$scope.hasSubmitted=!0,$scope.commissions.date=moment().format("DD/MM/YYYY"),$scope.commissions.fit_booking_id=results.data[0].fit_bookings.id,$scope.commissions.tour_code=results.data[0].fit_bookings.tour_code,$scope.commissions.tour_leader=results.data[0].fit_bookings.tour_leader,$scope.commissions.tour_guide=results.data[0].tourguides.name,$scope.commissions.total_sgd=calculateTotalSGD($scope.commissions),$scope.commissions.total_rmb=calculateTotalRMB($scope.commissions),$scope.commissions.tour_guide_signature="",$scope.commissions.tour_leader_signature="",$scope.commissions.commission_items.length<=0&&$scope.commissions.commission_items.push({id:0,rmb:0,sgd:0,remarks:"",tourguide_commission_id:0,qty:0})):($scope.commissions={},$scope.hasSubmitted=!1,$scope.commissions.date=moment().format("DD/MM/YYYY"),$scope.commissions.commission_items=[],$scope.commissions.commission_items.push({id:0,rmb:0,sgd:0,remarks:"",tourguide_commission_id:0,qty:0}),fitbookingsModel.getBookingDetails(fitBookingId).then(function(results){results.data?($scope.commissions.fit_booking_id=results.data[0].id,$scope.commissions.tour_code=results.data[0].tour_code,$scope.commissions.tour_leader=results.data[0].tour_leader,270==results.data[0].sale_agency_id&&($scope.commissions.sgd_to_company=1,$scope.commissions.rmb_to_company=1),tourguideModel.getTourGuideDetails().then(function(results){results.data?$scope.commissions.tour_guide=results.data[0].name:console.log("Error occurred - invalid tour guide.")}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving tour guide details.")})):console.log("Error occurred - invalid booking.")}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving commission claims details.")}))}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving commission claims details.")}),$scope.addAttraction=function(){$scope.commissions.commission_items.push({id:0,rmb:0,sgd:0,remarks:"",tourguide_commission_id:0,qty:0})},$scope.calculateTotalSGD=function(commissions){$scope.commissions.total_sgd=calculateTotalSGD(commissions)},$scope.calculateTotalRMB=function(commissions){$scope.commissions.total_rmb=calculateTotalRMB(commissions)},$scope.submitForm=function(commissions){commissions.tour_guide_signature='{"lines":[]}'!=$("#tour_guide_signature").val()?$("#tour_guide_signature").val():"",commissions.tour_leader_signature='{"lines":[]}'!=$("#tour_leader_signature").val()?$("#tour_leader_signature").val():"",commissionFormModel.submitForms(commissions).then(function(results){void 0!==results.data.errors&&Object.keys(results.data.errors).length>0?$scope.errors=results.data.errors:("true"==results.data?$rootScope.showNotification("领队佣金单已成功提交。","success"):$rootScope.showNotification("领队佣金单未提交。","error"),$location.path("/fitbookings/forms/"+commissions.fit_booking_id))}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in submitting commission claim.")})},$("#TourGuideSignature").signature({syncField:$("#TourGuideSignature").next("input")}),$("#TourLeaderSignature").signature({syncField:$("#TourLeaderSignature").next("input")}),$(".clearButton a").click(function(e){e.preventDefault(),$(this).parents(".sigWrapper").find(".sigPad").signature("clear"),$(this).parents(".sigWrapper").find(".sigPad").next("input").val("")})}]);
claims.controller("ClaimsController",["$scope","$rootScope","$route","$location","$http","$uibModal","$window","claimsModel","restaurantsModel","ticketsModel","commonModel","attractionsModel",function($scope,$rootScope,$route,$location,$http,$uibModal,$window,claimsModel,restaurantsModel,ticketsModel,commonModel,attractionsModel){var fitBookingId=$route.current.params.fitBookingId;restaurantsModel.getRestaurants().then(function(results){results.data?($scope.restaurants=results.data,$scope.restaurants.push({id:0,name:"Others with GST 其他有消费税"},{id:999,name:"Others without GST 其他无消费税"})):console.log("There is no restaurant.")}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving restaurants.")}),ticketsModel.getTickets().then(function(results){results.data?($scope.tickets=results.data,$scope.tickets.push({id:0,ticket:"Other tickets 其他门票"})):console.log("There is no ticket.")}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving tickets.")}),commonModel.getOtherExpensesClaimOptions().then(function(results){results.data?$scope.claim_options=results.data:console.log("There is no claim options.")}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving claim options.")}),attractionsModel.getAttractions().then(function(results){results.data?$scope.attractions=results.data:console.log("There is no attraction.")}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving attractions.")}),claimsModel.getAClaim(fitBookingId).then(function(results){if(results.data){if($scope.claim=results.data[0],void 0===$scope.claim&&($scope.claim={},$scope.claim.fit_booking_id=fitBookingId),$scope.calTotal($scope.claim),(void 0===$scope.claim.expenses_restaurants||$scope.claim.expenses_restaurants.length<=0)&&($scope.claim.expenses_restaurants=[],$scope.claim.expenses_restaurants.push({id:"",restaurant_id:"undefined",other_restaurant:"",amount:0,claim_option_id:6})),(void 0===$scope.claim.expenses_fees||$scope.claim.expenses_fees.length<=0)&&($scope.claim.expenses_fees=[],$scope.claim.expenses_fees.push({id:"",amount:0,claim_option_id:7})),(void 0===$scope.claim.expenses_taxis||$scope.claim.expenses_taxis.length<=0)&&($scope.claim.expenses_taxis=[],$scope.claim.expenses_taxis.push({id:"",amount:0,claim_option_id:7})),(void 0===$scope.claim.expenses_tips||$scope.claim.expenses_tips.length<=0)&&($scope.claim.expenses_tips=[],$scope.claim.expenses_tips.push({id:"",amount:0,claim_option_id:7})),(void 0===$scope.claim.ticket_expenses||$scope.claim.ticket_expenses.length<=0)&&($scope.claim.ticket_expenses=[],$scope.claim.ticket_expenses.push({id:"",ticket:"",other_ticket:"",amount:0,claim_option_id:15})),void 0===$scope.claim.other_expenses||$scope.claim.other_expenses.length<=0)$scope.claim.other_expenses=[],$scope.claim.other_expenses.push({id:"",expenses:"",other_expenses:"",amount:0,claim_option_id:15}),$scope.claim.other_expenses.push({id:"",expenses:"",other_expenses:"",amount:0,claim_option_id:""});else{var hasOld=!1,hasOtherExpenses=!1;angular.forEach($scope.claim.other_expenses,function(v,k){15==v.claim_option_id?hasOld=!0:v.claim_option_id>15&&(hasOtherExpenses=!0)}),hasOld||($scope.claim.other_expenses=[],$scope.claim.other_expenses.push({id:"",expenses:"",other_expenses:"",amount:0,claim_option_id:15})),hasOtherExpenses||$scope.claim.other_expenses.push({id:"",expenses:"",other_expenses:"",amount:0,claim_option_id:""})}void 0===$scope.claim.income_owns||$scope.claim.income_owns.length<=0?($scope.claim.income_owns=[],$scope.claim.income_owns.push({id:"",attraction_id:"",other_attraction:"",selling_price:0,tl_cost:0,tg_cost:0,fee:0,qty:0,claim_option_id:2,total:0})):angular.forEach($scope.claim.income_owns,function(v,k){$scope.calTotalIncome(v)}),void 0===$scope.claim.income_products||$scope.claim.income_products.length<=0?($scope.claim.income_products=[],$scope.claim.income_products.push({id:"",fee:"",qty:"",claim_option_id:2,total:0})):angular.forEach($scope.claim.income_products,function(v,k){$scope.calTotalProduct(v)}),(void 0===$scope.claim.other_incomes||$scope.claim.other_incomes.length<=0)&&($scope.claim.other_incomes=[],$scope.claim.other_incomes.push({id:"",income:"",amount:0,claim_option_id:1}))}else console.log("Tour guide claim is empty.")}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in retrieving tour guide claim.")}),$scope.addRestaurant=function(){$scope.claim.expenses_restaurants.push({id:"",restaurant_id:"undefined",other_restaurant:"",amount:0,claim_option_id:6})},$scope.addTickets=function(){$scope.claim.ticket_expenses.push({id:"",ticket:"undefined",other_ticket:"",amount:0,claim_option_id:15})},$scope.addOtherExpenses=function(){$scope.claim.other_expenses.push({id:"",expenses:"",other_expenses:"",amount:0,claim_option_id:""})},$scope.addIncomeOwn=function(){$scope.claim.income_owns.push({id:"",attraction_id:"",other_attraction:"",selling_price:0,tl_cost:0,tg_cost:0,fee:0,qty:0,claim_option_id:2,total:0})},$scope.addOtherIncome=function(){$scope.claim.other_incomes.push({id:"",income:"",amount:0,claim_option_id:1})},$scope.calTotalIncome=function(income){income.total=parseInt(income.qty)*(parseFloat(income.selling_price)-parseFloat(income.tl_cost)-parseFloat(income.tg_cost))},$scope.calTotalProduct=function(product){product.total=(null!=product.qty?parseInt(product.qty):0)*parseFloat(product.fee)},$scope.greaterThan=function(prop,val){return function(item){return""==item[prop]||item[prop]>val}},$scope.calTotal=function(claim){var totalExpenses=0,totalIncome=0,advanceCash=0;claim&&(angular.forEach(claim.expenses_restaurants,function(v,k){totalExpenses+=parseFloat(v.amount?v.amount:0)}),totalExpenses+=parseFloat(claim.expenses_fees[0].amount)+parseFloat(claim.expenses_taxis[0].amount)+parseFloat(claim.expenses_tips[0].amount),angular.forEach(claim.ticket_expenses,function(v,k){totalExpenses+=parseFloat(v.amount?v.amount:0)}),angular.forEach(claim.other_expenses,function(v,k){totalExpenses+=parseFloat(v.amount?v.amount:0)}),angular.forEach(claim.income_owns,function(v,k){totalIncome+=parseFloat(v.total?v.total:0)}),angular.forEach(claim.income_products,function(v,k){totalIncome+=parseFloat(v.total?v.total:0)}),angular.forEach(claim.other_incomes,function(v,k){totalIncome+=parseFloat(v.amount?v.amount:0)}),advanceCash+=parseFloat(claim.advance_cash?claim.advance_cash:0)),$scope.totalExpenses=totalExpenses,$scope.totalIncome=totalIncome,$scope.advanceCash=advanceCash,$scope.balance=totalExpenses-totalIncome-advanceCash,console.log($scope.totalIncome)},$scope.submitForm=function(claim){claimsModel.submitForms(claim).then(function(results){void 0!==results.data.errors&&Object.keys(results.data.errors).length>0?$scope.errors=results.data.errors:("true"==results.data?$rootScope.showNotification("导游请款单已成功提交。","success"):$rootScope.showNotification("导游请款单未提交。","error"),$location.path("/fitbookings/forms/"+claim.fit_booking_id))}).catch(function(error){401==error.status?$location.path("/"):console.log("Error occurred in submitting tour guide claim.")})},$scope.getClaimOption=function(claimOptionId){var text="";return angular.forEach($scope.claim_options,function(v,k){v.id==claimOptionId&&(text=v.text)}),text}}]);
app.factory("tourguideModel",function($http){var obj={login:function(user){return $http.post(apiUrl+"/login",user)},getTourGuideDetails:function(){return $http.get(apiUrl+"/me")},logout:function(){return $http.post(apiUrl+"/logout")}};return obj});
app.factory("fitbookingsModel",function($http,$route){var obj={getBookings:function(filter){var data={dateFrom:moment(filter.dateFrom).format("Y-MM-DD"),dateTo:moment(filter.dateTo).format("Y-MM-DD")};return $http.post(apiUrl+"/fitbookings/mine",data)},getBookingDetails:function(fitBookingId){return $http.get(apiUrl+"/fitbookings/mine/"+fitBookingId)},getWelcomeSign:function(fitBookingId){return $http.get(apiUrl+"/fitbookings/welcome/"+fitBookingId)},check2ndCall:function(fitBookingId){var data={fitBookingId:fitBookingId};return $http.post(apiUrl+"/fitbookings/has-2nd-call",data)}};return obj});
app.factory("fitTransportsModel",function($http,$route){var obj={getTransportsByBookingId:function(bookingId){return $http.get(apiUrl+"/fit-transports/"+bookingId)}};return obj});
app.factory("saleAgenciesModel",function($http,$route){var obj={getSalesAgencyById:function(saleAgencyId){return $http.get(apiUrl+"/sales-agencies/"+saleAgencyId)}};return obj});
app.factory("safetyContractsModel",function($http,$route){var obj={submitForm:function(contract){var data={contract:contract};return $http.post(apiUrl+"/safety-contracts/submit",data)}};return obj});
app.factory("ownExpensesModel",function($http,$route){var obj={submitForm:function(ownExpenses){var data={ownExpenses:ownExpenses};return $http.post(apiUrl+"/own-expenses/submit",data)}};return obj});
app.factory("inStoreModel",function($http,$route){var obj={submitForm:function(inStore){var data={inStore:inStore};return $http.post(apiUrl+"/in-store/submit",data)}};return obj});
app.factory("feedbackModel",function($http,$route){var obj={getTourguideStaticFormOpts:function(){return[{label:"服务态度 SERVICES",class:"fb-services",name:"tour_guide_services",model:"feedback.tour_guide_services"},{label:"衣着 ATTIRE",class:"fb-attire",name:"tour_guide_attire",model:"feedback.tour_guide_attire"},{label:"介绍景点 ATTRACTION INTRO",class:"fb-attraction",name:"tour_guide_attraction",model:"feedback.tour_guide_attraction"},{label:"推荐自费 OPTIONAL",class:"fb-optional",name:"tour_guide_optional",model:"feedback.tour_guide_optional"},{label:"介绍购物 SHOPPING",class:"fb-shopping",name:"tour_guide_shopping",model:"feedback.tour_guide_shopping"},{label:"车购 COACH SHOPPING",class:"fb-coachshopping",name:"tour_guide_coach",model:"feedback.tour_guide_coach"}]},getCoachStaticFormOpts:function(){return[{label:"司机技术 DRIVER'S TECHNIQUE",class:"fb-driverstechnique",name:"coach_technique"},{label:"司机服务态度 DRIVER'S ATTITUDE",class:"fb-driversattitude",name:"coach_attitude"},{label:"空调 AIR CONDITION",class:"fb-aircondition",name:"coach_aircon"},{label:"车内整洁 CLEANLINESS",class:"fb-cleanliness",name:"coach_cleaniness"}]},getHotelStaticFormOpts:function(){return[{label:"酒店滿意度 HOTEL SATISFACTION",class:"fb-hotelsatisfaction",name:"hotel"}]},submitForm:function(feedback){var data={feedback:feedback};return $http.post(apiUrl+"/feedback/submit",data)},getBookingDetails:function(fitBookingId){return $http.get(apiUrl+"/fitbookings/mine/"+fitBookingId)},getSalesAgencyById:function(saleAgencyId){return $http.get(apiUrl+"/sales-agencies/"+saleAgencyId)},getRestaurants:function(){return $http.get(apiUrl+"/restaurants")}};return obj});
app.factory("arrivalFormModel",function($http,$route){var obj={getArrivalFormDetails:function(fitbookingId){return $http.get(apiUrl+"/arrival-form/"+fitbookingId)},submitForms:function(arrivalForms){var data={arrivalForms:arrivalForms};return $http.post(apiUrl+"/arrival-form/submit",data)}};return obj});
app.factory("fitFlightsModel",function($http,$route){var obj={getArrivalDetails:function(fitbookingId,callNum){var data={fitbookingId:fitbookingId,callNum:callNum};return $http.post(apiUrl+"/fit-flights/get-arrival-details",data)}};return obj});
app.factory("commissionFormModel",function($http,$route){var obj={getCommissionClaimsDetails:function(fitbookingId){return $http.get(apiUrl+"/commission-form/"+fitbookingId)},submitForms:function(commissions){var data={commissions:commissions};return $http.post(apiUrl+"/commission-form/submit",data)}};return obj});
app.factory("claimsModel",function($http,$route){var obj={getAClaim:function(fitbookingId){return $http.get(apiUrl+"/claims/"+fitbookingId)},submitForms:function(claim){var data={claim:claim};return $http.post(apiUrl+"/claims/submit",data)}};return obj});
app.factory("restaurantsModel",function($http,$route){var obj={getRestaurants:function(){return $http.get(apiUrl+"/restaurants")}};return obj});
app.factory("ticketsModel",function($http,$route){var obj={getTickets:function(){return $http.get(apiUrl+"/tickets")}};return obj});
app.factory("commonModel",function($http,$route){var obj={getOtherExpensesClaimOptions:function(fitbookingId){return $http.get(apiUrl+"/common/other-expenses-claim-options")}};return obj});
app.factory("attractionsModel",function($http,$route){var obj={getAttractions:function(){return $http.get(apiUrl+"/attractions")}};return obj});