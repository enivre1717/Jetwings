"use strict";var getUrl=window.location,baseUrl=getUrl.protocol+"//"+getUrl.host+"/"+getUrl.pathname.split("/")[1],viewUrl=baseUrl+"/public",apiUrl=baseUrl+"/public",app=angular.module("myApp",["ngRoute","ui.bootstrap","ngCookies","tour_guide","fit_bookings","forms","safety_contracts","own_expenses","arrival_form","commission_form","claims","in_store","feedback"]),tour_guide=angular.module("tour_guide",["ngRoute"]),fit_bookings=angular.module("fit_bookings",["ngRoute"]),forms=angular.module("forms",["ngRoute"]),safety_contracts=angular.module("safety_contracts",["ngRoute"]),own_expenses=angular.module("own_expenses",["ngRoute"]),arrival_form=angular.module("arrival_form",["ngRoute"]),commission_form=angular.module("commission_form",["ngRoute"]),claims=angular.module("claims",["ngRoute"]),in_store=angular.module("in_store",["ngRoute"]),feedback=angular.module("feedback",["ngRoute"]);app.config(function($routeProvider,$locationProvider){$routeProvider.when("/",{controller:"LoginController",templateUrl:viewUrl+"/login"}).when("/fitbookings/list",{controller:"FitBookingsController",templateUrl:viewUrl+"/fitbookings/list"}).when("/fitbookings/forms/:fitBookingId",{controller:"FormsController",templateUrl:viewUrl+"/fitbookings/forms"}).when("/fitbookings/details/:fitBookingId",{controller:"FitBookingsDetailsController",templateUrl:viewUrl+"/fitbookings/details"}).when("/fitbookings/welcome/:fitBookingId",{controller:"WelcomeController",templateUrl:viewUrl+"/fitbookings/welcome"}).when("/safety-contracts/index/:fitBookingId",{controller:"SafetyContractController",templateUrl:viewUrl+"/safety-contracts/index"}).when("/own-expenses/index/:fitBookingId",{controller:"OwnExpensesController",templateUrl:viewUrl+"/own-expenses/index"}).when("/arrival/index/:fitBookingId",{controller:"ArrivalFormController",templateUrl:viewUrl+"/arrival/index"}).when("/commissions/index/:fitBookingId",{controller:"CommissionFormController",templateUrl:viewUrl+"/commissions/index"}).when("/claims/index/:fitBookingId",{controller:"ClaimsController",templateUrl:viewUrl+"/claims/index"}).when("/in-store/index/:fitBookingId",{controller:"InStoreController",templateUrl:viewUrl+"/in-store/index"}).when("/feedback/index/:fitBookingId",{controller:"FeedbackController",templateUrl:viewUrl+"/feedback/index"}).when("/logout",{controller:"LogoutController",templateUrl:viewUrl+"/login"}).otherwise({templateUrl:viewUrl+"/errors/404"})}),app.run(["$http","$cookies","$rootScope","$location",function($http,$cookies,$rootScope,$location){$http.defaults.headers.common.Authorization=$cookies.get("apiToken"),$http.defaults.headers.common["X-CSRF-TOKEN"]=$('meta[name="csrf-token"]').attr("content"),$rootScope.monthList=function(){for(var aryMonth=[],strMonth="",i=1;i<=12;i++)strMonth=("0"+i).slice(-2),aryMonth.push({value:strMonth,text:strMonth});return aryMonth},$rootScope.todayDate=moment().format("DD/MM/YYYY"),$rootScope.curYear=moment().format("YYYY"),$rootScope.curMonth=moment().format("MM"),$rootScope.curDay=moment().format("DD"),$rootScope.$on("$routeChangeStart",function(evt,to,from){void 0!==$cookies.get("apiToken")&&"/"==to.$$route.originalPath&&($rootScope.isLoggedIn=!0,$location.path("/fitbookings/list")),void 0!==$cookies.get("apiToken")&&""!=$cookies.get("apiToken")?$rootScope.isLoggedIn=!0:$rootScope.isLoggedIn=!1}),$rootScope.$on("$routeChangeError",function(evt,to,from,error){401==error.status&&($location.path("/"),$cookies.remove("apiToken"))}),$rootScope.showNotification=function(msg,type){$rootScope.msg=msg,$rootScope.class="error"==type?"danger":"success"}}]),app.filter("formatDate",function(){return function(text,format){return moment(text).format(format)}}).filter("html",function($sce){return function(text){return $sce.trustAsHtml(text)}});
tour_guide.controller("LoginController",["$scope","$rootScope","$route","$http","$uibModal","$window","tourguideModel","$cookies","$location",function($scope,$rootScope,$route,$http,$uibModal,$window,tourguideModel,$cookies,$location){$scope.login=function(user){tourguideModel.login(user).then(function(results){200==results.status?void 0!==results.data.errors&&Object.keys(results.data.errors).length>0?$scope.errors=results.data.errors:($cookies.put("apiToken","Bearer "+results.data.apiToken),$http.defaults.headers.common.Authorization="Bearer "+results.data.apiToken,$location.path("/fitbookings/list")):console.log("Error occurred - unable to login to the app.")}).catch(function(error){console.log(error),console.log("Error occurred in angular.")})},$scope.close=function(){$scope.$modalInstance.close()}}]);
tour_guide.controller("LogoutController",["$scope","$route","$http","$uibModal","$window","tourguideModel","$location","$cookies",function($scope,$route,$http,$uibModal,$window,tourguideModel,$location,$cookies){tourguideModel.logout().then(function(results){200==results.status?1==results.data&&($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred - unable to logout of the app.")}).catch(function(error){console.log(error),console.log("Error occurred in angular.")})}]);
fit_bookings.controller("FitBookingsController",["$scope","$route","$http","$uibModal","$window","fitbookingsModel","$location","$cookies",function($scope,$route,$http,$uibModal,$window,fitbookingsModel,$location,$cookies){$scope.isDateFromFilterOpened=!1,$scope.isDateToFilterOpened=!1;var date=new Date,startMonth=new Date(date.getFullYear(),date.getMonth(),1),endMonth=new Date(date.getFullYear(),date.getMonth()+1,0);$scope.openDateFromFilter=function(){0==$scope.isDateFromFilterOpened?$scope.isDateFromFilterOpened=!0:$scope.isDateFromFilterOpened=!1},$scope.openDateToFilter=function(){0==$scope.isDateToFilterOpened?$scope.isDateToFilterOpened=!0:$scope.isDateToFilterOpened=!1},$scope.filter={},$scope.filter.dateFrom=startMonth,$scope.filter.dateTo=endMonth,fitbookingsModel.getBookings($scope.filter).then(function(results){$scope.fitbookings=results.data}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred retrieving bookings.")}),$scope.filterBookings=function(filter){fitbookingsModel.getBookings(filter).then(function(results){$scope.fitbookings=results.data}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred retrieving bookings.")})},$scope.fitbookingDetails=function(fitBookingId){$location.path("/fitbookings/forms/"+fitBookingId)}}]).controller("FitBookingsDetailsController",["$scope","$route","$http","$uibModal","$window","fitbookingsModel","$location","$cookies",function($scope,$route,$http,$uibModal,$window,fitbookingsModel,$location,$cookies){var fitBookingId=$route.current.params.fitBookingId;fitbookingsModel.getBookingDetails(fitBookingId).then(function(results){$scope.fitbookings=results.data[0],$scope.hotels=[],angular.forEach($scope.fitbookings.calls,function(v,k){$scope.hotels.push(v.hotels)})}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred retrieving bookings details.")})}]).controller("WelcomeController",["$scope","$route","$http","$uibModal","$window","fitbookingsModel","$location","$cookies",function($scope,$route,$http,$uibModal,$window,fitbookingsModel,$location,$cookies){$scope.fitBookingId=$route.current.params.fitBookingId,fitbookingsModel.getWelcomeSign($scope.fitBookingId).then(function(results){$scope.welcomeSign=results.data}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred retrieving welcome sign.")})}]);
forms.controller("FormsController",["$scope","$route","$location","$http","$uibModal","$window","fitbookingsModel","$cookies",function($scope,$route,$location,$http,$uibModal,$window,fitbookingsModel,$cookies){var fitBookingId=$route.current.params.fitBookingId;fitbookingsModel.getBookingDetails(fitBookingId).then(function(results){results.data?$scope.bookingDetails=results.data[0]:console.log("Booking details is empty.")}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred in retrieving bookings.")}),fitbookingsModel.check2ndCall(fitBookingId).then(function(results){results.data?$scope.has2ndCall=results.data:console.log("Error occurred in retrieving 2nd call.")}).catch(function(error){401==error.status?($location.path("/"),$cookies.remove("apiToken")):console.log("Error occurred in retrieving 2nd call.")})}]);